
//	Pyramidion 0.19 (as of 2023.05.11)
//	==================================

//	Nod.Flg byte bits explanation
//	―――――――――――――――――――――――――――――

//	0 1 2 3 4 5 6 7											   Bit mask	 Reverse Bits
//	^ ^ ^ ^ ^ ^ ^ ^											==============	==============
//	| | | | | | | ⌎―― Bit #7: Out flag ― an outgoing egde (from the node) present if 1, none if 0	00000001 =   1	11111110 = 254
//	| | | | | | ⌎―――― Bit #6: Inc flag ― an incoming egde (to the node) present if 1, none if 0	00000010 =   2	11111101 = 253
//	| | | | | ⌎―――――― Bit #5: Del flag ― deleted node if 1, existing if 0				00000100 =   4	11111011 = 251
//	| | | | ⌎―――――――― Bit #4: Frm flag ― a non―empty formula field present if 1 (else if 0)	00001000 =   8	11110111 = 247
//	| | | ⌎―――――――――― Bit #3: Adv flag ― a non―empty adventor field present if 1 (else if 0)	00010000 =  16	11101111 = 239
//	| | ⌎―――――――――――― Bit #2: Nme flag ― a non―empty nodename field present if 1 (else if 0)	00100000 =  32	11011111 = 223
//	| ⌎―――――――――――――― Bit #1: Lnk flag ― node is linked to the current node if 1, not if 0		01000000 =  64	10111111 = 191
//	⌎―――――――――――――――― Bit #0: Sup flag ― node is superior to the current node if 1, not if 0 *	10000000 = 128	01111111 = 127
//	*) The Sup flag is not used so far

//	24 functions and procedures to manipulate Nod.Flg bits:

	function OutFlg(NIdx: Int64): Boolean;		procedure SetOutFlg(NIdx: Int64);		procedure ClrOutFlg(NIdx: Int64);
	function IncFlg(NIdx: Int64): Boolean;		procedure SetIncFlg(NIdx: Int64);		procedure ClrIncFlg(NIdx: Int64);
	function DelFlg(NIdx: Int64): Boolean;		procedure SetDelFlg(NIdx: Int64);		procedure ClrDelFlg(NIdx: Int64);
	function FrmFlg(NIdx: Int64): Boolean;		procedure SetFrmFlg(NIdx: Int64);		procedure ClrFrmFlg(NIdx: Int64);
	function AdvFlg(NIdx: Int64): Boolean;		procedure SetAdvFlg(NIdx: Int64);		procedure ClrAdvFlg(NIdx: Int64);
	function NmeFlg(NIdx: Int64): Boolean;		procedure SetNmeFlg(NIdx: Int64);		procedure ClrNmeFlg(NIdx: Int64);
	function LnkFlg(NIdx: Int64): Boolean;		procedure SetLnkFlg(NIdx: Int64);		procedure ClrLnkFlg(NIdx: Int64);
	function SupFlg(NIdx: Int64): Boolean;		procedure SetSupFlg(NIdx: Int64);		procedure ClrSupFlg(NIdx: Int64);


//	Nod.Edg.Flg byte bits explanation
//	―――――――――――――――――――――――――――――――――

//	0123 4 5 6 7											   Bit mask	 Reverse Bits
//	     ^ ^ ^ ^											==============	==============
//	     | | | ⌎―― Bit #7: Dir flag ― outgoing edge if 1, incoming if 0				00000001 =   1	11111110 = 254
//	     | | ⌎―――― Bit #6: ETp flag ― an edge type ID is present if 1, none if 0			00000010 =   2	11111101 = 253
//	     | ⌎―――――― Bit #5: Mnz flag ― manaz ID present if 1, none if 0				00000100 =   4	11111011 = 251
//	     ⌎―――――――― Bit #4: Del flag ― deleted edge if 1, existing if 0				00001000 =   8	11110111 = 247

//	15 functions and procedures to manipulate Nod.Edg.Flg bits:

	function EOutFlg(NIdx: Int64; EIdx: Int64): Boolean;		function EIncFlg(NIdx: Int64; EIdx: Int64): Boolean;
	procedure SetEOutFlg(NIdx: Int64; EIdx: Int64);			procedure SetEIncFlg(NIdx: Int64; EIdx: Int64);
	procedure ClrEOutFlg(NIdx: Int64; EIdx: Int64);			procedure ClrEIncFlg(NIdx: Int64; EIdx: Int64);
	
	function EETpFlg(NIdx: Int64; EIdx: Int64): Boolean;		function EMnzFlg(NIdx: Int64; EIdx: Int64): Boolean;
	procedure SetEETpFlg(NIdx: Int64; EIdx: Int64);			procedure SetEMnzFlg(NIdx: Int64; EIdx: Int64);
	procedure ClrEETpFlg(NIdx: Int64; EIdx: Int64);			procedure ClrEMnzFlg(NIdx: Int64; EIdx: Int64);
	
	function EDelFlg(NIdx: Int64; EIdx: Int64): Boolean;
	procedure SetEDelFlg(NIdx: Int64; EIdx: Int64);
	procedure ClrEDelFlg(NIdx: Int64; EIdx: Int64);


